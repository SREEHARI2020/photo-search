{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setvalue","result","setresult","className","type","placeholder","onChange","e","target","onClick","fetch","then","res","json","data","errors","results","map","item","src","urls","regular","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA2DeA,MAnDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAoBb,OACE,sBAAKC,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UAEE,+BAAM,2CAEJ,uBAAOA,UAAU,WAAWC,KAAK,OAAQC,YAAa,cAAcN,MAAOA,EAAOO,SAAW,SAACC,GAAD,OAAKP,EAASO,EAAEC,OAAOT,UACpH,wBAAQU,QAzBA,WAChBC,MAAM,uGAAD,OAAwGX,EAAxG,0BACJY,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACAA,EAAKC,OAKPb,EAAU,IAHZA,EAAUY,EAAKE,aAmBT,qBAGL,qBAAKb,UAAU,UAAf,SAIEF,EAAOgB,KAAI,SAACC,GAAD,OAET,qBAAKf,UAAU,mCAAiDgB,IAAKD,EAAKE,KAAKC,SAAxBH,EAAKI,aCjCxDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cca7d2bc.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, {useState} from 'react';\n\n\n\n\n\nfunction App() {\n  const [value, setvalue] = useState(\"\")\n  const [result, setresult] = useState([])\n  const fetchImages=()=>{\n    fetch(`https://api.unsplash.com/search/photos/?client_id=3JojCedYjv8R4GhZj5P9BpcwU19wS6i_Rfp2dv-yV3Q&query=${value}&orientation=squarish`)\n    .then(res=>res.json())\n    .then(data=>{\n      if(!data.errors)\n      {\n      setresult(data.results);\n      }\n      else{\n        setresult([]);\n      }\n    })\n  \n  \n  \n  }\n \n  return (\n    <div className=\"App\">\n     \n        <div className=\"myapp\">\n          \n          <span><h1>GALLERY</h1>\n            </span>\n            <input className=\"my-input\" type=\"text\"  placeholder =\"search here\" value={value} onChange= {(e)=>setvalue(e.target.value)} />\n            <button onClick={fetchImages}>Send</button>\n       \n        </div>\n       <div className=\"gallery\">\n         \n           \n       {\n         result.map((item)=>(\n           \n           <img className=\"item col-dp-3 col-tb-4 col-mb-12\" key={item.id} src={item.urls.regular} />             \n         )\n          )\n       }\n       \n      \n     \n       </div>\n       \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}